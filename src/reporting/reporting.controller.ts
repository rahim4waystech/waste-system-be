
import { Reporting } from "./reporting.entity";
import { Crud, CrudController, CrudRequestInterceptor, ParsedRequest, CrudRequest, Action, Feature } from "@nestjsx/crud";
import { Controller, UseInterceptors, Post, Param, Body, Get } from "@nestjs/common";
import { ReportingService } from "./reporting.service";
/**
 * This file was generated by Four Ways Technology
 *
 * On Mon Jan 18 2021 10:06:58 GMT+0000 (Greenwich Mean Time)
 */
@Crud({
    model: {
      type: Reporting
    }
  })
  @Controller('reporting')
  @Feature('reporting')
  export class ReportingController implements CrudController<Reporting> {
    constructor(public service: ReportingService) {}

    @UseInterceptors(CrudRequestInterceptor)
    @Post('utilisation/')
    @Action('utilisation')
    async utilisationReport(@ParsedRequest() req: CrudRequest, @Param() params, @Body() data: any) {
      return await this.service.getUtilisationForDateRange(data);
    }

    @Post('netIncomeByVehicle/')
    @Action('netIncomeByVehicle')
    async getNetIncomeByVehicle(@ParsedRequest() req: CrudRequest, @Param() params, @Body() data: any) {
      return await this.service.getNetIncomeByVehicle(data);
    }

    @Post('debtorsReportByDateRange/')
    @Action('debtorsReportByDateRange')
    async getDebtorsReport(@ParsedRequest() req: CrudRequest, @Param() params, @Body() data: any) {
      return await this.service.getDebtorsReport(data);
    }

    @Get('defectStats/')
    @Action('defectStats')
    async getDefectStats(@ParsedRequest() req: CrudRequest, @Param() params, @Body() data: any) {
      return await this.service.getDefectStats();
    }
  }
