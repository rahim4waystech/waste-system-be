
import { CalendarEvent } from "./calendar-event.entity";
import { Crud, CrudController } from "@nestjsx/crud";
import { Controller, Post, Param } from "@nestjs/common";
import { CalendarEventService } from "./calendar-event.service";
import moment = require("moment");
/**
 * This file was generated by Four Ways Technology
 *
 * On Sat Mar 20 2021 18:54:52 GMT+0000 (Coordinated Universal Time)
 */
@Crud({
  model: {
    type: CalendarEvent
  }
})
@Controller('calendar-event')
export class CalendarEventController implements CrudController<CalendarEvent> {
  constructor(public service: CalendarEventService) { }

  @Post('sync/:id')
  async syncToOutlook(@Param('id') id: number) {

    if(true) {
      return {};
    }

    let calendarEvent: any = await this.service.getEventById(id);

    calendarEvent = calendarEvent[0];


//


/*
client_id=535fb089-9ff3-47b6-9bfb-4f1264799865
&scope=https%3A%2F%2Fgraph.microsoft.com%2F.default
&client_secret=qWgdYAmab0YSkuL1qKv5bPX
&grant_type=client_credentials
*/
    
    const axios = require('axios');

    const params = new URLSearchParams();
    params.append('scope', 'https://graph.microsoft.com/.default');
    params.append('grant_type', 'client_credentials');
    params.append('client_id', '158580db-b7a6-459e-93ab-333410ea0739');
    params.append('client_secret', 'HZmGK0LeL~156D~0fPifv30yNXJK~-.u27');


const config = {
  headers: {
    'Content-Type': 'application/x-www-form-urlencoded'
  }
}

axios.post('https://login.microsoftonline.com/874d337d-62ca-4a0e-8ad2-1970f0e04754/oauth2/v2.0/token', params, config)
  .then((result) => {
       const instance = axios.create({
      baseURL: 'https://graph.microsoft.com/v1.0/',
      timeout: 1000,
      headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer ' + result.data.access_token }
    });



    var jsonBody = {
      "Subject": calendarEvent.name,
      "Body": {
        "ContentType": "HTML",
        "Content": calendarEvent.description,
      },
      "Start": {
        "DateTime": moment(calendarEvent.date).format('YYYY-MM-DD') + "T" + calendarEvent.startTime,
        "TimeZone": "Eastern Standard Time"
      },
      "End": {
        "DateTime": moment(calendarEvent.date).format('YYYY-MM-DD') + "T" + calendarEvent.endTime,
        "TimeZone": "Eastern Standard Time"
      },
      "location": {
        "displayName": "Somewhere"
      },
      Attendees: [
        {
          emailAddress: {
            address: "lauren.duffy@WRCRECYCLING.co.uk",
            name: "Lauren Duffy",
          },
          type: "required"
        }
      ],
    };

    // Pass the user's email address
    var userInfo = {
      email:'lauren.duffy@WRCRECYCLING.co.uk'
    };

    instance.post('/users/lauren.duffy@WRCRECYCLING.co.uk/calendar/events', jsonBody).then(function (response) {
    })
      .catch(function (error) {
      });
  })
  .catch((err) => {
    
  })



  }

}