
import { OrderStatusHistory } from "./order-status-history.entity";
import { Injectable } from "@nestjs/common";
import { InjectRepository } from "@nestjs/typeorm";

import { TypeOrmCrudService } from "@nestjsx/crud-typeorm";

/**
 * This file was generated by Four Ways Technology
 * 
 * On Mon Aug 10 2020 15:53:41 GMT+0100 (British Summer Time)
 */
@Injectable()
export class OrderStatusHistoryService extends TypeOrmCrudService<OrderStatusHistory> {
  constructor(@InjectRepository(OrderStatusHistory) repo) {
    super(repo);
  }

  async updateOrderStatusHistory(orderId: number, statusId: number, reason: string='') {
    const orderStatusHistoryEntity = new OrderStatusHistory();
    orderStatusHistoryEntity.createdBy = -1; //update this when user system in place
    orderStatusHistoryEntity.orderId = orderId;
    orderStatusHistoryEntity.orderStatusId = statusId;
    orderStatusHistoryEntity.notes = reason === '' ? this.getNotesBasedOnStatusId(statusId) : reason;

    await this.repo.save(orderStatusHistoryEntity);
  }

  private getNotesBasedOnStatusId(statusId: number) {
    if(!statusId) {
      throw new Error('OrderStatusHistoryService: you must provide a valid statusId to generate notes');
    }

    const notes = ['This order is now pending', 'Order has been accepted', 'Order has been declined', 'Order has been completed']

    return notes[statusId -1];
  }
}
