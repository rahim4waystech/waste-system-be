
import { Container } from "./container.entity";
import { Crud, CrudController, ParsedRequest, CrudRequestInterceptor, CrudRequest, Feature } from "@nestjsx/crud";
import { Controller, UseInterceptors, Post, Param, Body } from "@nestjs/common";
import { ContainerService } from "./container.service";
import * as htmlPdf from 'html-pdf-chrome';
import { PDFService } from "src/core/pdf.service";
/**
 * This file was generated by Four Ways Technology
 * 
 * On Tue Aug 11 2020 12:15:01 GMT+0100 (British Summer Time)
 */
@Crud({
    model: {
      type: Container
    },
    query: {
      join: {
        containerType : {
          eager: true
        },
        containerGroup: {
          eager: true,
        },
        containerSizeType: {
          eager: true,
        },
        'containerSizeType.unit': {
          eager: true,
        },
        containerLocation: {
          eager: true,
        }
      }
    }
  })
  @Controller('container')
  @Feature('container')
  export class ContainerController implements CrudController<Container> {
    constructor(public service: ContainerService,
      private pdfService: PDFService) {}

    @UseInterceptors(CrudRequestInterceptor)
    @Post('setTracking')
    async setTracking(@ParsedRequest() req: CrudRequest, @Param() params, @Body() data: any) {
      const containerInId = data['containerInId'];
      const containerOutId = data['containerOutId'];
      const siteId = data['order']['siteId'];

      if(containerInId !== -1) {
        await this.service.setContainerLocation(containerInId, siteId);
      }

      if(containerOutId !== -1 && containerOutId) {
        // Exchange/empty and replace
        await this.service.setContainerLocation(containerOutId, -1);
      }

      return data;
    }

    @UseInterceptors(CrudRequestInterceptor)
    @Post('pdf/')
    async timelinePDF(@ParsedRequest() req: CrudRequest, @Param() params, @Body() data: any) {
      
      await this.pdfService.createPDFUsingTemplate('qr', __dirname + '/../../assets/qr/sheet', {data:data});

      return {fileName: '/qr/sheet.pdf'};
    }
  }
