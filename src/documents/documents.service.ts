
import { Documents } from "./documents.entity";
import { Injectable } from "@nestjs/common";
import { InjectRepository } from "@nestjs/typeorm";

import { TypeOrmCrudService } from "@nestjsx/crud-typeorm";

/**
 * This file was generated by Four Ways Technology
 *
 * On Thu Jan 07 2021 09:36:13 GMT+0000 (Greenwich Mean Time)
 */
@Injectable()
export class DocumentsService extends TypeOrmCrudService<Documents> {
  constructor(@InjectRepository(Documents) repo) {
    super(repo);
  }

  async createUsingDTO(dto) {
    return await this.repo.save(dto);
  }

  async getDocumentById(id:number){
    if(!id || id <= -1) {
      throw new Error("you must provide an valid id in getDocumentById");
    }

    return this.repo.find({ where: { id: id }, relations: [] });
  }

  async getDocumentsByEntityNameAndId(entity: string, entityId: number) {
    if(!entity || entity === "") {
      throw new Error('you must supply a valid entity for getDocumentsByEntityNameAndId');
    }

    if(!entityId || entityId === -1) {
      throw new Error('you must supply a valid id for getDocumentsByEntityNameAndId');
    }

    return await this.find({
      where: {
        entity: entity,
        entityId: entityId,
      }
    })
  }
}
