
import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, OneToOne, JoinColumn, OneToMany } from "typeorm";
import { VehicleType } from "src/vehicle-type/vehicle-type.entity";
import { AssetRegister } from "src/asset-register/asset-register.entity";
import { FuelType } from "src/fuel-type/fuel-type.entity";
import { Account } from "src/account/account.entity";
import { VehicleDetails } from "src/vehicledetails/vehicledetails.entity";
import { SecondaryVehicleType } from "src/secondary-vehicletype/secondary-vehicletype.entity";
/**
 * This file was generated by Four Ways Technology
 *
 * On Fri Aug 07 2020 15:04:21 GMT+0100 (British Summer Time)
 */
@Entity()
export class Vehicle {
  @PrimaryGeneratedColumn() id: number;
  @Column({nullable:true, default:-1}) vehicleTypeId: number;
  @OneToOne(type => VehicleType) @JoinColumn() vehicleType: VehicleType;

  

  @Column({nullable:true, default:-1}) secondaryVehicleTypeId: number;
  @OneToOne(type => SecondaryVehicleType) @JoinColumn() secondaryVehicleType: SecondaryVehicleType;

  @Column({nullable:true, default:-1}) detailId: number;
  @OneToOne(type => VehicleDetails) @JoinColumn() detail: VehicleDetails;

  @Column({nullable:true, default: -1}) fuelTypeId: number;
  @OneToOne(type => FuelType) @JoinColumn() fuelType: FuelType;




  @Column({nullable:true,default:-1}) depotId: number;
  @OneToOne(type => Account) @JoinColumn() depot: Account;

  @Column({nullable:true,default:-1}) assetId: number;
  @OneToOne(type => AssetRegister) @JoinColumn() asset: AssetRegister;

  @OneToMany(() => VehicleType, vechiletypename => vechiletypename.name)
  vechiletypename: VehicleType[];
  

  @Column() registration: string;
  @Column() vinNumber: string;
  @Column({nullable:true, default:'m'}) distanceUnit: string;
  @Column() name: string;


  
  @Column() make: string;
  @Column() model: string;
  @Column({type: 'float'}) tareWeight: number;

  @Column({type: 'date', nullable: true,default:null}) purchaseDate: string;
  @Column({type: 'date', nullable: true,default:null}) lastServiceDate: string;
  @Column({type: 'text'}) notes: string;
  @Column() active: boolean;
  @Column() driverId: number;
  @Column() createdBy: number;


  @CreateDateColumn() createdAt: string;
  @UpdateDateColumn() updatedAt: string;

}
