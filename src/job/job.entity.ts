
import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, OneToOne, JoinColumn } from "typeorm";
import { JobAssignment } from "src/job-assignment/job-assignment.entity";
import { JobStatus } from "src/job-status/job-status.entity";
import { Order } from "src/order/order.entity";
import { Container } from "src/container/container.entity";
import { TippingPrices } from "src/tipping-prices/tipping-prices.entity";
import { WeightStatus } from "src/weight-status/weight-status.entity";
import { DriverJobStatus } from "src/driver-job-status/driver-job-status.entity";
import { User } from "src/auth/user.entity";
/**
 * This file was generated by Four Ways Technology
 * 
 * On Tue Aug 25 2020 13:55:19 GMT+0100 (British Summer Time)
 */
@Entity()
export class Job {
  @PrimaryGeneratedColumn() id: number;

  @OneToOne(type => JobAssignment) @JoinColumn() jobAssignment: JobAssignment;
  @Column() jobAssignmentId: number;

  @OneToOne(type => JobStatus) @JoinColumn() jobStatus: JobStatus;
  @Column() jobStatusId: number;

  @OneToOne(type => DriverJobStatus) @JoinColumn() driverJobStatus: DriverJobStatus;
  @Column({nullable: true, default: -1}) driverJobStatusId: number;

  @OneToOne(type => Order) @JoinColumn() order: Order;
  @Column() orderId: number;

  @OneToOne(type => Container) @JoinColumn() containerOut: Container;
  @Column() containerOutId: number;

  @OneToOne(type => Container) @JoinColumn() containerIn: Container;
  @Column() containerInId: number;
  
  @Column() jobSignOffStatusId: number = -1;
  @Column() jobManagerSignOff: boolean = false;
  @Column() tipAndReturn: boolean = false;
  @Column({type: 'longtext'}) notes: string = '';
  @Column() chargeable: boolean = true;
  @Column() weight: number = -1;
  @Column() complianceIssue: boolean = false;
  @Column() complianceNotes: string = '';
  @Column() tareWeight: number = 0;
  @Column() transportSignOffNotes: string = '';
  @Column({type: 'longtext'}) timelineNotes: string = '';
  @Column() subcontractorReg: string = '';
  @Column() hasOverweight: boolean = true;
  @Column({type: 'float'}) newPrice: number = 0;
  @Column() overridePrice: boolean = false;

  @Column({type: 'date', nullable: true, default: null}) shredderDestructionDate: string;

  // SCHEMA CHNAGE: weightStatusId
  @OneToOne(type => WeightStatus) @JoinColumn({ name: "weightStatusId" }) weightStatus: WeightStatus;
  @Column() weightStatusId: number = -1;

  @OneToOne(type => TippingPrices) @JoinColumn({ name: "tippingPriceId" }) tippingPrice: TippingPrices;
  @Column() tippingPriceId: number = -1;

  @Column() blockNumber: number;
  @Column({type: 'float'}) qty: number;
  @Column({type: 'date'}) date: string;
  @Column({type: 'date', nullable: true, default: null}) endDate: string;
  @Column({type: 'text'}) time: string = '';

  @Column({type: 'text'}) carriarSignature: string = '';
  @Column({type: 'text'}) carriarSignatureName: string = '';
  @Column({type: 'text'}) tippedSignature: string = '';
  @Column({type: 'text'}) tippedSignatureName: string = '';
  @Column() weightNotes: string = '';

  @Column() collectionOrder: number = 0;

  @OneToOne(type => User)
  @JoinColumn({ name: "createdBy" })
  createdUser: User;
  @Column() createdBy: number = -1;

  @OneToOne(type => User)
  @JoinColumn({ name: "updatedBy" })
  updatedUser: User;

  @Column() updatedBy: number = -1;
  @CreateDateColumn() createdAt: string;
  @UpdateDateColumn() updatedAt: string; 

  /**New Work**/
  @Column() collectionVehicleId: number = -1;
  @Column() collectionDriverId: number = -1;
  @Column() deliveryVehicleId: number = -1;
  @Column() deliveryDriverId: number = -1;


}    
 
